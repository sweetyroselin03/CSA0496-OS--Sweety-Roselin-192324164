#include <stdio.h>
#define MAX 10
void nonPreemptivePriority(int at[], int bt[], int pr[], int n) {
    int wt[MAX], ct[MAX], tat[MAX];
    int time = 0, completed = 0, min_index;
    int remaining = n; 
    for (int i = 0; i < n; i++) {
        wt[i] = 0;
    }
    while (completed < n) {
        min_index = -1;
        for (int i = 0; i < n; i++) {
            if (at[i] <= time && bt[i] > 0 && (min_index == -1 || pr[i] < pr[min_index])) {
                min_index = i;
            }
        }
        if (min_index == -1) {
            time++; // If no process is ready, just move time forward
            continue;
        }
        time += bt[min_index]; 
        ct[min_index] = time; 
        tat[min_index] = ct[min_index] - at[min_index];
        wt[min_index] = tat[min_index] - bt[min_index]; 
        completed++;
        bt[min_index] = 0; 
        printf("Process %d  Completion Time: %d  Waiting Time: %d  Turnaround Time: %d\n",
                min_index + 1, ct[min_index], wt[min_index], tat[min_index]);
    }
    int total_wt = 0, total_tat = 0;
    for (int i = 0; i < n; i++) {
        total_wt += wt[i];
        total_tat += tat[i];
    }
    printf("\nAverage Waiting Time: %.2f\n", (float)total_wt / n);
    printf("Average Turnaround Time: %.2f\n", (float)total_tat / n);
}
int main() {
    int n, at[MAX], bt[MAX], pr[MAX];
    printf("Enter number of processes: ");
    scanf("%d", &n);
    for (int i = 0; i < n; i++) {
        printf("Enter arrival time, burst time, and priority for process %d: ", i + 1);
        scanf("%d %d %d", &at[i], &bt[i], &pr[i]);
    }
    nonPreemptivePriority(at, bt, pr, n);
    return 0;
}
